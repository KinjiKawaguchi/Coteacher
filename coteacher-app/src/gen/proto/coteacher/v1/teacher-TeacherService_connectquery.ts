// @generated by protoc-gen-connect-query v0.4.4 with parameter "target=ts,import_extension=none"
// @generated from file coteacher/v1/teacher.proto (package coteacher.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CheckTeacherExistsByEmailRequest, CheckTeacherExistsByEmailResponse, CheckTeacherExistsByIDRequest, CheckTeacherExistsByIDResponse } from "./teacher_pb";
import { MethodKind } from "@bufbuild/protobuf";
import { createQueryService } from "@connectrpc/connect-query";

export const typeName = "coteacher.v1.TeacherService";

/**
 * @generated from service coteacher.v1.TeacherService
 */
export const TeacherService = {
  typeName: "coteacher.v1.TeacherService",
  methods: {
    /**
     * @generated from rpc coteacher.v1.TeacherService.CheckTeacherExistsByID
     */
    checkTeacherExistsByID: {
      name: "CheckTeacherExistsByID",
      I: CheckTeacherExistsByIDRequest,
      O: CheckTeacherExistsByIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc coteacher.v1.TeacherService.CheckTeacherExistsByEmail
     */
    checkTeacherExistsByEmail: {
      name: "CheckTeacherExistsByEmail",
      I: CheckTeacherExistsByEmailRequest,
      O: CheckTeacherExistsByEmailResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from rpc coteacher.v1.TeacherService.CheckTeacherExistsByID
 */
export const checkTeacherExistsByID = createQueryService({
  service: TeacherService,
}).checkTeacherExistsByID;

/**
 * @generated from rpc coteacher.v1.TeacherService.CheckTeacherExistsByEmail
 */
export const checkTeacherExistsByEmail = createQueryService({
  service: TeacherService,
}).checkTeacherExistsByEmail;
