// @generated by protoc-gen-connect-query v0.4.4 with parameter "target=ts,import_extension=none"
// @generated from file coteacher/v1/question.proto (package coteacher.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetQuestionListByFormIdRequest, GetQuestionListByFormIdResponse, SaveQuestionListRequest, SaveQuestionListResponse } from "./question_pb";
import { MethodKind } from "@bufbuild/protobuf";
import { createQueryService } from "@connectrpc/connect-query";

export const typeName = "coteacher.v1.QuestionService";

/**
 * @generated from service coteacher.v1.QuestionService
 */
export const QuestionService = {
  typeName: "coteacher.v1.QuestionService",
  methods: {
    /**
     * @generated from rpc coteacher.v1.QuestionService.GetQuestionListByFormId
     */
    getQuestionListByFormId: {
      name: "GetQuestionListByFormId",
      I: GetQuestionListByFormIdRequest,
      O: GetQuestionListByFormIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc coteacher.v1.QuestionService.SaveQuestionList
     */
    saveQuestionList: {
      name: "SaveQuestionList",
      I: SaveQuestionListRequest,
      O: SaveQuestionListResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from rpc coteacher.v1.QuestionService.GetQuestionListByFormId
 */
export const getQuestionListByFormId = createQueryService({
  service: QuestionService,
}).getQuestionListByFormId;

/**
 * @generated from rpc coteacher.v1.QuestionService.SaveQuestionList
 */
export const saveQuestionList = createQueryService({
  service: QuestionService,
}).saveQuestionList;
