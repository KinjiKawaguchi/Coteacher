# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from coteacher.v1 import student_pb2 as coteacher_dot_v1_dot_student__pb2


class StudentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckStudentExistsByID = channel.unary_unary(
                '/coteacher.v1.StudentService/CheckStudentExistsByID',
                request_serializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByIDRequest.SerializeToString,
                response_deserializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByIDResponse.FromString,
                )
        self.CheckStudentExistsByEmail = channel.unary_unary(
                '/coteacher.v1.StudentService/CheckStudentExistsByEmail',
                request_serializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByEmailRequest.SerializeToString,
                response_deserializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByEmailResponse.FromString,
                )
        self.ParticipateClass = channel.unary_unary(
                '/coteacher.v1.StudentService/ParticipateClass',
                request_serializer=coteacher_dot_v1_dot_student__pb2.ParticipateClassRequest.SerializeToString,
                response_deserializer=coteacher_dot_v1_dot_student__pb2.ParticipateClassResponse.FromString,
                )
        self.QuitClass = channel.unary_unary(
                '/coteacher.v1.StudentService/QuitClass',
                request_serializer=coteacher_dot_v1_dot_student__pb2.QuitClassRequest.SerializeToString,
                response_deserializer=coteacher_dot_v1_dot_student__pb2.QuitClassResponse.FromString,
                )


class StudentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckStudentExistsByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckStudentExistsByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ParticipateClass(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QuitClass(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StudentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckStudentExistsByID': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStudentExistsByID,
                    request_deserializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByIDRequest.FromString,
                    response_serializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByIDResponse.SerializeToString,
            ),
            'CheckStudentExistsByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStudentExistsByEmail,
                    request_deserializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByEmailRequest.FromString,
                    response_serializer=coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByEmailResponse.SerializeToString,
            ),
            'ParticipateClass': grpc.unary_unary_rpc_method_handler(
                    servicer.ParticipateClass,
                    request_deserializer=coteacher_dot_v1_dot_student__pb2.ParticipateClassRequest.FromString,
                    response_serializer=coteacher_dot_v1_dot_student__pb2.ParticipateClassResponse.SerializeToString,
            ),
            'QuitClass': grpc.unary_unary_rpc_method_handler(
                    servicer.QuitClass,
                    request_deserializer=coteacher_dot_v1_dot_student__pb2.QuitClassRequest.FromString,
                    response_serializer=coteacher_dot_v1_dot_student__pb2.QuitClassResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'coteacher.v1.StudentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StudentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckStudentExistsByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coteacher.v1.StudentService/CheckStudentExistsByID',
            coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByIDRequest.SerializeToString,
            coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckStudentExistsByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coteacher.v1.StudentService/CheckStudentExistsByEmail',
            coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByEmailRequest.SerializeToString,
            coteacher_dot_v1_dot_student__pb2.CheckStudentExistsByEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ParticipateClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coteacher.v1.StudentService/ParticipateClass',
            coteacher_dot_v1_dot_student__pb2.ParticipateClassRequest.SerializeToString,
            coteacher_dot_v1_dot_student__pb2.ParticipateClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QuitClass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coteacher.v1.StudentService/QuitClass',
            coteacher_dot_v1_dot_student__pb2.QuitClassRequest.SerializeToString,
            coteacher_dot_v1_dot_student__pb2.QuitClassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
